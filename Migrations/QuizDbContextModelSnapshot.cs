// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServerApi.Models;

#nullable disable

namespace ServerApi.Migrations
{
    [DbContext(typeof(QuizDbContext))]
    partial class QuizDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ServerApi.Models.CreatedPDF", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("QUESTION_ID")
                        .HasColumnType("int");

                    b.Property<int>("SUBJECT_ID")
                        .HasColumnType("int");

                    b.Property<int>("USER_ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("CreatedPDF");
                });

            modelBuilder.Entity("ServerApi.Models.Questions", b =>
                {
                    b.Property<int>("QUESTION_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QUESTION_ID"));

                    b.Property<string>("ANSWER")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ANSWER_1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ANSWER_2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ANSWER_3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ANSWER_4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIFFICULTY")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("QUESTION_TITLE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SUBJECT_ID")
                        .HasColumnType("int");

                    b.Property<int>("USER_ID")
                        .HasColumnType("int");

                    b.HasKey("QUESTION_ID");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("ServerApi.Models.Subjects", b =>
                {
                    b.Property<int>("SUBJECT_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SUBJECT_ID"));

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SUBJECT_ID");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("ServerApi.Models.Users", b =>
                {
                    b.Property<int>("USER_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("USER_ID"));

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("date");

                    b.Property<string>("EMAIL")
                        .IsRequired()
                        .HasColumnType("varchar50");

                    b.Property<string>("FULLNAME")
                        .IsRequired()
                        .HasColumnType("varchar50");

                    b.Property<string>("PASSWORD")
                        .IsRequired()
                        .HasColumnType("varchar20");

                    b.Property<string>("USERNAME")
                        .IsRequired()
                        .HasColumnType("varchar20");

                    b.HasKey("USER_ID");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
